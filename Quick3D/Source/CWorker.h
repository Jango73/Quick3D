
#pragma once

#include "quick3d_global.h"

// Qt
#include <QThread>

//-------------------------------------------------------------------------------------------------

class QUICK3D_EXPORT CWorker : public QThread
{
	Q_OBJECT

public:

	//-------------------------------------------------------------------------------------------------
	// Constructeurs et destructeur
	//-------------------------------------------------------------------------------------------------

	//! Constructeur par défaut
	CWorker();

	//! Destructeur
	virtual ~CWorker();

	//-------------------------------------------------------------------------------------------------
	// Setters
	//-------------------------------------------------------------------------------------------------

	//-------------------------------------------------------------------------------------------------
	// Getters
	//-------------------------------------------------------------------------------------------------

	//! Retourne vrai si le travail a commencé
	bool isStarted() { return m_bStarted; }

	//! Retourne vrai si le travail est terminé
	bool isFinished() { return m_bFinished; }

	//-------------------------------------------------------------------------------------------------
	// Méthodes héritées
	//-------------------------------------------------------------------------------------------------

	//-------------------------------------------------------------------------------------------------
	// Méthodes de contrôle
	//-------------------------------------------------------------------------------------------------

	//! Méthode de travail
	virtual void work();

	//! Annule le travail de l'objet
	void abort();

	//! Exécute un sleep
	void doSleep(int ms);

	//-------------------------------------------------------------------------------------------------
	// Méthodes héritées protégées
	//-------------------------------------------------------------------------------------------------

protected:

	//! Implémentation de la méthode run() de QThread
	virtual void run();

	//-------------------------------------------------------------------------------------------------
	// Propriétés
	//-------------------------------------------------------------------------------------------------

protected:

	bool		m_bStopRequested;	// Indique si l'arrêt du travail est demandé

private:

	bool		m_bStarted;			// Indique si le travail a commencé
	bool		m_bFinished;		// Indique si le travail est terminé
};
