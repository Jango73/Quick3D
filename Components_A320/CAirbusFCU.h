
#pragma once

#include "components_a320_global.h"

//-------------------------------------------------------------------------------------------------

// Application
#include "Constants.h"
#include "CAirbusFlightComputer.h"

//-------------------------------------------------------------------------------------------------

class C3DScene;

//-------------------------------------------------------------------------------------------------

class COMPONENTS_A320_EXPORT CAirbusFCU : public CAirbusFlightComputer
{
public:

    //-------------------------------------------------------------------------------------------------
    // Constructeurs et destructeur
    //-------------------------------------------------------------------------------------------------

    //!
    static CComponent* instanciator(C3DScene* pScene);

    //!
    CAirbusFCU(C3DScene* pScene);

    //!
    virtual ~CAirbusFCU();

    //-------------------------------------------------------------------------------------------------
    // Setters
    //-------------------------------------------------------------------------------------------------

    //-------------------------------------------------------------------------------------------------
    // Getters
    //-------------------------------------------------------------------------------------------------

    //-------------------------------------------------------------------------------------------------
    // Méthodes héritées
    //-------------------------------------------------------------------------------------------------

    //!
    virtual QString getClassName() const { return ClassName_CAirbusFCU; }

    //!
    virtual void update(double dDeltaTime) Q_DECL_OVERRIDE;

    //-------------------------------------------------------------------------------------------------
    // Méthodes de contrôle
    //-------------------------------------------------------------------------------------------------

    //
    void toggle_AutoPilot1_Engaged();

    //
    void toggle_AutoPilot2_Engaged();

    //
    void toggle_AutoThrust_Engaged();

    //
    void increment_SelectedHeading(bool bFast);

    //
    void decrement_SelectedHeading(bool bFast);

    //-------------------------------------------------------------------------------------------------
    // Propriétés
    //-------------------------------------------------------------------------------------------------

protected:

    bool	m_bAutoPilot1_Engaged;
    bool	m_bAutoPilot2_Engaged;
    bool	m_bAutoThrust_Engaged;

    double	m_dSelectedHeading;
};
